#pragma once

#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <iostream>
#include <math.h>
#include <cmath>
#ifndef AI_H
#define AI_H

class AI {
public:
    // Constructor
    AI(string text_file); //Constructor that takes in text file from the user's input generated by OpenAI's API.
    void parseData(); //parses through input text file. Compares it to the database text file of words to identify the optimal pacing, transition, color correction and effects from the output response.
    
    //Pacing
    void pacing(); //generates numbers that can influence the rate at which other functions (transitions, clip length, clip speed).

    //Color correction
    void warm(cv::VideoCapture& inputVideo, cv::VideoWriter& outputVideo); //warm color correction
    void cold(); //cold color correction

    //Soft transition
    void fade(Clip* clip1, Clip* clip2); //handles fade transition
    void blur(Clip* clip1, Clip* clip2); //handles blur transition

    //Hard transition
    void wipe(); //handles wipe transition

    //Effects
    void slowMotion(); //handles slow motion effect

private:
    string database; //text file name of database of words to compare
    vector<string> pacing; //can be fast, slow, varies...
    vector<string> transitions; //can be fast, smooth, gentle..
    vector<string> color_correction; //can be warm, cold, hard, soft...
    vector<string> effects; //slow motion, ect.
};

#endif // HEADER_FILE_NAME_H
